---
import { getSiteContent } from "../content/utils";
import { t, type Language } from "../i18n/utils";

interface Props {
  lang?: Language;
}

const { lang = 'en' } = Astro.props as Props;

const siteContent = await getSiteContent(lang);

const hasProjects = siteContent.projects && siteContent.projects.length > 0;
const hasExperience = siteContent.experience && siteContent.experience.length > 0;
const hasEducation = siteContent.education && siteContent.education.length > 0;
const hasLanguages = siteContent.languages && siteContent.languages.length > 0;
const hasHobbies = siteContent.hobbies && siteContent.hobbies.length > 0;

const getNavLink = (key: string) => t(lang, `nav.${key}`);
const getLanguageUrl = (l: Language) => (l === 'en' ? '/' : '/de/');
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 hidden md:block transition-all duration-300"
>
  <nav class="max-w-7xl mx-auto px-8 py-4">
    <ul class="flex items-center gap-8 justify-center">
      <li>
        <a
          href="#about"
          class="text-gray-700 hover:text-black transition-colors font-medium"
        >
          {getNavLink('about')}
        </a>
      </li>
      {
        hasLanguages && (
          <li>
            <a
              href="#languages"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              {getNavLink('languages')}
            </a>
          </li>
        )
      }
      {
        hasProjects && (
          <li>
            <a
              href="#projects"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              {getNavLink('projects')}
            </a>
          </li>
        )
      }
      {
        hasExperience && (
          <li>
            <a
              href="#experience"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              {getNavLink('experience')}
            </a>
          </li>
        )
      }
      {
        hasEducation && (
          <li>
            <a
              href="#education"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              {getNavLink('education')}
            </a>
          </li>
        )
      }
      {
        hasHobbies && (
          <li>
            <a
              href="#hobbies"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              {getNavLink('hobbies')}
            </a>
          </li>
        )
      }
      <li class="ml-4 pl-4 border-l border-gray-300">
        <div class="grid grid-cols-2 gap-0 bg-gray-100 rounded-lg p-1">
          <a
            href={getLanguageUrl('en')}
            class={`w-10 h-10 flex items-center justify-center rounded transition-all font-medium text-sm ${
              lang === 'en'
                ? 'bg-white text-black shadow-sm'
                : 'text-gray-600 hover:text-gray-800'
            }`}
          >
            EN
          </a>
          <a
            href={getLanguageUrl('de')}
            class={`w-10 h-10 flex items-center justify-center rounded transition-all font-medium text-sm ${
              lang === 'de'
                ? 'bg-white text-black shadow-sm'
                : 'text-gray-600 hover:text-gray-800'
            }`}
          >
            DE
          </a>
        </div>
      </li>
    </ul>
  </nav>
</header>

<script>
  window.addEventListener("scroll", () => {
    const header = document.getElementById("header");
    if (window.scrollY > 100) {
      header?.classList.add("bg-white/80", "backdrop-blur-sm");
    } else {
      header?.classList.remove("bg-white/80", "backdrop-blur-sm");
    }
  });
</script>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
